#Область СлужебныйПрограммныйИнтерфейс

// Начинает обмен данными.
//
Функция НачатьОбмен(Знач Прокси = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	ИмяМобильногоУстройства = Константы.ИмяМобильногоУстройства.Получить();
	
	Узел = ПланыОбмена.бит_мп_МобильноеПриложениеДДС.ЭтотУзел();
	Если ЗначениеЗаполнено(Узел.Код) Тогда
		
		КодМобильногоУстройства = Узел.Код;
		
	Иначе
		
		КодМобильногоУстройства = Новый УникальныйИдентификатор();
		
		ОбъектУзла = Узел.ПолучитьОбъект();
		ОбъектУзла.Код 			= КодМобильногоУстройства;
		ОбъектУзла.Наименование	= ИмяМобильногоУстройства;
		ОбъектУзла.Записать();
		
	КонецЕсли;
	
	ЦентральныйУзел = ПланыОбмена.бит_мп_МобильноеПриложениеДДС.НайтиПоКоду("001");
	Если ЦентральныйУзел.Пустая() Тогда
		
		НовыйУзел = ПланыОбмена.бит_мп_МобильноеПриложениеДДС.СоздатьУзел();
		НовыйУзел.Код			= "001";
		НовыйУзел.Наименование	= "Центральный";
		НовыйУзел.Записать();
		ЦентральныйУзел = НовыйУзел.Ссылка;
		
	КонецЕсли;
	
	// Если создан новый узел обмена или счетчики сообщений переинициализированы,
	// перерегистрируем данные.
	Если ЦентральныйУзел.НомерОтправленного = 0 Тогда
		ОбменМобильноеПриложениеВызовСервера.ЗарегистрироватьИзмененияДанных(ЦентральныйУзел)
	КонецЕсли;
	
	СтруктураОтвета = ОбменМобильноеПриложениеВызовСервера.ПолучитьСтруктуруОтветаОбмена(1);
	СтруктураОтвета.НомерОтправленного      = ЦентральныйУзел.НомерОтправленного;
	СтруктураОтвета.НомерПринятого          = ЦентральныйУзел.НомерПринятого;
	СтруктураОтвета.КодМобильногоУстройства = КодМобильногоУстройства;
	СтруктураОтвета.ИмяМобильногоУстройства = ИмяМобильногоУстройства;
	
	Если Прокси = Неопределено Тогда
		
		Прокси = ОбменМобильноеПриложениеВызовСервера.ПолучитьПрокси(СтруктураОтвета.СообщениеОбОшибке);
		Если Прокси = Неопределено Тогда
			СтруктураОтвета.ЕстьОшибки = Истина;
			Возврат СтруктураОтвета;
		КонецЕсли;
		
	КонецЕсли;
	
	ОтветИБ = Прокси.НачатьОбмен(Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9)));
	
	ЗаполнитьЗначенияСвойств(СтруктураОтвета, ОтветИБ.Получить(),"Успешно,УдалитьДанныеНаУстройстве,СообщениеОбОшибке");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СтруктураОтвета;
	
КонецФункции // НачатьОбмен()

// Получает изменения из центральной базы
//
Функция ПолучитьИзмененияУзла(Знач КодМобильногоУстройства, Знач Прокси = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	СтруктураОтвета = ОбменМобильноеПриложениеВызовСервера.ПолучитьСтруктуруОтветаОбмена(2);
	СтруктураОтвета.КодМобильногоУстройства = КодМобильногоУстройства;
	
	Если Прокси = Неопределено Тогда
		
		Прокси = ОбменМобильноеПриложениеВызовСервера.ПолучитьПрокси(СтруктураОтвета.СообщениеОбОшибке);
		
		Если Прокси = Неопределено Тогда
			СтруктураОтвета.ЕстьОшибки = Истина;
			Возврат СтруктураОтвета;
		КонецЕсли;
		
	КонецЕсли;
	
	ОтветИБ  = Прокси.ПолучитьИзмененияУзла(Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9)));
	ДанныеИБ = ОтветИБ.Получить();
	
	ЗаполнитьЗначенияСвойств(СтруктураОтвета, ДанныеИБ, "Успешно");
	
	Если Не СтруктураОтвета.Успешно Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	Попытка
		ОбменМобильноеПриложениеПравилаОбмена.ПринятьСообщениеЗагрузки(ДанныеИБ.СообщениеОбмена);
	Исключение
		СтруктураОтвета.Успешно    = Ложь;
		СтруктураОтвета.ЕстьОшибки = Истина;
		СтруктураОтвета.СообщениеОбОшибке = НСтр("ru = 'Ошибка обмена справочниками:'") + Символы.ПС + ИнформацияОбОшибке().Описание;
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СтруктураОтвета;
	
КонецФункции // ПолучитьИзмененияУзла()

// Отправляет изменения в центральную базу
//
Функция ОтправитьИзмененияУзла(Знач КодМобильногоУстройства, Знач Прокси = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	СтруктураОтвета = ОбменМобильноеПриложениеВызовСервера.ПолучитьСтруктуруОтветаОбмена(3);
	СтруктураОтвета.КодМобильногоУстройства = КодМобильногоУстройства;
	
	Если Прокси = Неопределено Тогда
		
		Прокси = ОбменМобильноеПриложениеВызовСервера.ПолучитьПрокси(СтруктураОтвета.СообщениеОбОшибке);
		
		Если Прокси = Неопределено Тогда
			СтруктураОтвета.ЕстьОшибки = Истина;
			Возврат СтруктураОтвета;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбменМобильноеПриложениеПравилаОбмена.ПодготовитьСообщениеВыгрузки(СтруктураОтвета.СообщениеОбмена);
	
	ОтветИБ  = Прокси.ОтправитьИзмененияУзла(Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9)));
	ДанныеИБ = ОтветИБ.Получить();
	
	ЗаполнитьЗначенияСвойств(СтруктураОтвета, ДанныеИБ, "Успешно");
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат СтруктураОтвета;
	
КонецФункции // ОтправитьИзмененияУзла()

// Загружает данные об остатках и оборотах.
//
Функция ПолучитьДанные(Знач Отборы, Знач Прокси = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	СтруктураОтвета = ОбменМобильноеПриложениеВызовСервера.ПолучитьСтруктуруОтветаОбмена(4);
	
	Если Прокси = Неопределено Тогда
		
		Прокси = ОбменМобильноеПриложениеВызовСервера.ПолучитьПрокси(СтруктураОтвета.СообщениеОбОшибке);
		
		Если Прокси = Неопределено Тогда
			СтруктураОтвета.ЕстьОшибки = Истина;
			Возврат СтруктураОтвета;
		КонецЕсли;
		
	КонецЕсли;
	
	ОтборыКопия = Новый Структура;
	Для Каждого КиЗ Из Отборы Цикл
		ОтборыКопия.Вставить(КиЗ.Ключ, КиЗ.Значение);
	КонецЦикла;
	ОтборыКопия.Вставить("РазделУчета", ОбщегоНазначенияВызовСервера.ПолучитьИмяЗначенияПеречисления("РазделУчета", ОтборыКопия.РазделУчета)); 
	
	// Запись структуры отборов в XML
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ОбъектXDTO = СериализаторXDTO.ЗаписатьXDTO(ОтборыКопия);
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектXDTO);
	
	ОтветИБ  = Прокси.ПолучитьДанные(Новый ХранилищеЗначения(ЗаписьXML.Закрыть(), Новый СжатиеДанных(9)));
	ДанныеИБ = ОтветИБ.Получить();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ДанныеИБ);
	
	ПолученныеДанные = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
	
	ЗаполнитьЗначенияСвойств(СтруктураОтвета, ПолученныеДанные, "Остатки, Обороты");
	
	Возврат СтруктураОтвета;
	
КонецФункции // ПолучитьДанные()

#КонецОбласти

#Область ОбщиеПроцедурыИФункции

Функция СинхронизацияУзловЗавершена() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ОбновитьПовторноИспользуемыеЗначения();
	
	СтруктураОтвета = Новый Структура();
	СтруктураОтвета.Вставить("Прокси"			, Неопределено);
	СтруктураОтвета.Вставить("Успешно"			, Ложь);
	СтруктураОтвета.Вставить("СообщениеОбОшибке", "");
	
	СтруктураОтвета.Прокси = ОбменМобильноеПриложениеВызовСервера.ПолучитьПрокси(СтруктураОтвета.СообщениеОбОшибке);
	Если СтруктураОтвета.Прокси = Неопределено Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	СтрНачатьОбмен = ОбменМобильноеПриложениеСервер.НачатьОбмен(СтруктураОтвета.Прокси);
	Если Не СтрНачатьОбмен.Успешно Тогда
		СтруктураОтвета.СообщениеОбОшибке = СтрНачатьОбмен.СообщениеОбОшибке;
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	СтрПолучитьИзмененияУзла = ОбменМобильноеПриложениеСервер.ПолучитьИзмененияУзла(СтрНачатьОбмен.КодМобильногоУстройства, СтруктураОтвета.Прокси);
	Если Не СтрПолучитьИзмененияУзла.Успешно Тогда
		СтруктураОтвета.СообщениеОбОшибке = СтрНачатьОбмен.СообщениеОбОшибке;
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	СтрОтправитьИзмененияУзла = ОбменМобильноеПриложениеСервер.ОтправитьИзмененияУзла(СтрНачатьОбмен.КодМобильногоУстройства, СтруктураОтвета.Прокси);
	Если Не СтрОтправитьИзмененияУзла.Успешно Тогда
		СтруктураОтвета.СообщениеОбОшибке = СтрНачатьОбмен.СообщениеОбОшибке;
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	СтруктураОтвета.Успешно = Истина;
	
	Возврат СтруктураОтвета;
	
КонецФункции // СинхронизацияУзловЗавершена()

#КонецОбласти