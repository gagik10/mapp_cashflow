
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БанковскийСчет	= Параметры.БанковскийСчет;
	Сумма			= Параметры.Сумма;
	
	УтановитьЗначенияПоУмолчанию();
	
	ОбновитьНаСервере();
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Настройки(Команда)
	
	Оповещение = Новый ОписаниеОповещения("НастройкиЗавершение", ЭтотОбъект);
	ОткрытьФорму("Обработка.РабочийСтол.Форма.ОтборыБанковскиеСчета", ОтборыИсторияПлатежей, ЭтаФорма,,,,Оповещение);
	
КонецПроцедуры // Настройки()

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры // Обновить()

&НаКлиенте
Процедура Поделиться(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		Если Не СредстваТелефонии.ПоддерживаетсяОтправкаSMS(Истина) Тогда
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыписка Тогда
		ОтправитьВыписку();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРеквизиты Тогда
		ОтправитьБанковскиеРеквизиты();
	КонецЕсли;
	
КонецПроцедуры // Поделиться()

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыборВыпискаРеквизитыПриИзменении(Элемент)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["Группа" + ВыборВыпискаРеквизиты];
	Элементы.ГруппаФильтры.Видимость		= (Элементы.ГруппаСтраницы.ТекущаяСтраница <> Элементы.ГруппаРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	ПолучитьРеквизитыСчета();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура ПлатежиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РасшифровкаПлатежа(Элемент);
	
КонецПроцедуры // ПлатежиВыбор()

#КонецОбласти

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура ОтправитьВыписку()
	
	ТабДокументДляОтправки = Новый ТабличныйДокумент;
	СформироватьТабДокНаСервере(ТабДокументДляОтправки);
	ТемаПисьма = НСтр("ru='Выписка по счету '") + РеквизитНомерСчета;
	ОбщегоНазначенияКлиент.ОтправитьОтчетВCSV(ТемаПисьма, ТабДокументДляОтправки);
	
КонецПроцедуры // ОтправитьВыписку()

&НаКлиенте
Процедура ОтправитьБанковскиеРеквизиты()
	
	Пропуск = "
	|";
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("Название: ");			МассивСтрок.Добавить(РеквизитНазвание); 		МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("ИНН / КПП: ");		МассивСтрок.Добавить(РеквизитИННКПП); 			МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("Номер счета: ");		МассивСтрок.Добавить(РеквизитНомерСчета);		МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("Валюта: ");			МассивСтрок.Добавить(РеквизитВалюта); 			МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("Банк: ");				МассивСтрок.Добавить(РеквизитБанк); 			МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("БИК: ");				МассивСтрок.Добавить(РеквизитБИК); 				МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("Кор. счет: ");		МассивСтрок.Добавить(РеквизитКоррСчет); 		МассивСтрок.Добавить(Пропуск);
	МассивСтрок.Добавить("Почтовый адрес: "); 	МассивСтрок.Добавить(РеквизитПочтовыйАдрес); 	МассивСтрок.Добавить(Пропуск);
	
	ТемаПисьма	= НСтр("ru='Реквизиты счета'");
	ТекстПисьма = СтрСоединить(МассивСтрок);
	
	#Если МобильноеПриложениеКлиент Тогда
		Если ОбщегоНазначенияВызовСервера.ВерсияОС() = "iOS" Тогда
			ОбщегоНазначенияКлиент.ПослатьПисьмо(, ТемаПисьма, ТекстПисьма);
		Иначе
			ОбщегоНазначенияКлиент.ОтправитьВложениеАндроид(, ТемаПисьма, ТекстПисьма);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры // ОтправитьБанковскиеРеквизиты()

&НаКлиенте
Процедура РасшифровкаПлатежа(Элемент)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("БанковскийСчет"	, ТекущаяСтрока.БанковскийСчет);
	ПараметрыФормы.Вставить("Организация"		, ТекущаяСтрока.Организация);
	ПараметрыФормы.Вставить("Контрагент"		, ТекущаяСтрока.Контрагент);
	ПараметрыФормы.Вставить("ДатаПлатежа"		, ТекущаяСтрока.ДатаПлатежа);
	ПараметрыФормы.Вставить("НомерПлатежа"		, ТекущаяСтрока.НомерПлатежа);
	ПараметрыФормы.Вставить("НазначениеПлатежа"	, ТекущаяСтрока.НазначениеПлатежа);
	ПараметрыФормы.Вставить("Сумма"				, ТекущаяСтрока.Сумма);
	ПараметрыФормы.Вставить("Приход"			, ТекущаяСтрока.Приход);
	
	ОткрытьФорму("Обработка.РабочийСтол.Форма.РасшифровкаПлатежа", ПараметрыФормы);
	
КонецПроцедуры // РасшифровкаПлатежа()

&НаСервере
Процедура НастройкиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОтборыИсторияПлатежей, Результат);
	
	Элементы.НадписьПериод.Заголовок = ОбщегоНазначения.ПредставлениеПериодаРасчетногоДокумента(
		ОтборыИсторияПлатежей.ДатаНачала, ОтборыИсторияПлатежей.ДатаОкончания);
		
	ОбновитьНаСервере();
	
КонецПроцедуры // НастройкиЗавершение()

&НаСервере
Процедура ПолучитьРеквизитыСчета()
	
	РеквизитыСчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(БанковскийСчет,
	"НомерСчета,Владелец.НаименованиеСокращенное,Владелец.ИНН,Владелец.КПП,Банк,БИК,КоррСчет,ПочтовыйАдрес,НомерСчета,ВалютаДенежныхСредств.Наименование");
	
	РеквизитНомерСчета		= РеквизитыСчета.НомерСчета;
	РеквизитВалюта			= РеквизитыСчета.ВалютаДенежныхСредствНаименование;
	РеквизитНазвание		= РеквизитыСчета.ВладелецНаименованиеСокращенное;
	РеквизитИННКПП			= СокрЛП(РеквизитыСчета.ВладелецИНН) + " / " + СокрЛП(РеквизитыСчета.ВладелецКПП);
	РеквизитБанк			= РеквизитыСчета.Банк;
	РеквизитБИК				= РеквизитыСчета.БИК;
	РеквизитКоррСчет		= РеквизитыСчета.КоррСчет;
	РеквизитПочтовыйАдрес	= РеквизитыСчета.ПочтовыйАдрес;
	
КонецПроцедуры // ЗаполнитьРеквизитыСчета()

&НаСервере
Процедура УтановитьЗначенияПоУмолчанию()
	
	ВыборВыпискаРеквизиты = "Выписка";
	
	ПолучитьРеквизитыСчета();
	
	ОтборыИсторияПлатежей = Новый Структура;
	ОтборыИсторияПлатежей.Вставить("РазделУчета"		, Перечисления.РазделУчета.ПустаяСсылка());
	ОтборыИсторияПлатежей.Вставить("Организация"		, БанковскийСчет.Владелец);
	ОтборыИсторияПлатежей.Вставить("БанковскийСчет"		, БанковскийСчет);
	ОтборыИсторияПлатежей.Вставить("Контрагент"			, Справочники.Контрагенты.ПустаяСсылка());
	ОтборыИсторияПлатежей.Вставить("ДатаНачала"			, ДобавитьМесяц(НачалоДня(ТекущаяДата()), -1));
	ОтборыИсторияПлатежей.Вставить("ДатаОкончания"		, КонецДня(ТекущаяДата()));
	ОтборыИсторияПлатежей.Вставить("Приход"				, Истина);
	ОтборыИсторияПлатежей.Вставить("Расход"				, Истина);
	ОтборыИсторияПлатежей.Вставить("РасшифровкаСчета"	, Истина);
	
	Элементы.НадписьПериод.Заголовок = ОбщегоНазначения.ПредставлениеПериодаРасчетногоДокумента(
		ОтборыИсторияПлатежей.ДатаНачала, ОтборыИсторияПлатежей.ДатаОкончания);
	
КонецПроцедуры // УтановитьЗначенияПоУмолчанию()

&НаСервере
Процедура СформироватьТабДокНаСервере(ТабДокументДляОтправки)
	
	Макет = Обработки.РабочийСтол.ПолучитьМакет("МакетВыписка");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтрока	 = Макет.ПолучитьОбласть("Строки");
	
	ТабДокументДляОтправки.Вывести(ОбластьЗаголовок);
	
	Для Каждого Строка Из Платежи Цикл
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка,,"Сумма");
		ОбластьСтрока.Параметры.Сумма = ?(Строка.Приход, Формат(Строка.Сумма,"ЧЦ=15; ЧДЦ=2"), Формат(-Строка.Сумма,"ЧЦ=15; ЧДЦ=2"));
		ТабДокументДляОтправки.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьТабДокНаСервере()

&НаСервере
Процедура ОбновитьНаСервере()
	
	Если Не ОбщегоНазначенияВызовСервера.ПолучитьЗначениеКонстанты("СоединениеСЦБУстановлено") Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = ОбменМобильноеПриложениеСервер.СинхронизацияУзловЗавершена();
	Если Не Ответ.Успешно Тогда
		Возврат;
	КонецЕсли;
	
	Платежи.Очистить();
	
	СтруктураДанных = ОбменМобильноеПриложениеСервер.ПолучитьДанные(ОтборыИсторияПлатежей);
	
	Если ОтборыИсторияПлатежей.Приход И ОтборыИсторияПлатежей.Расход Тогда
		Платежи.Загрузить(СтруктураДанных.Обороты.ВсеПлаттежи);
	ИначеЕсли ОтборыИсторияПлатежей.Приход Тогда
		Платежи.Загрузить(СтруктураДанных.Обороты.Входящие);
	ИначеЕсли ОтборыИсторияПлатежей.Расход Тогда
		Платежи.Загрузить(СтруктураДанных.Обороты.Исходящие);
	КонецЕсли;
	
	Если СтруктураДанных.Остатки.ОборотыПоСчету.Количество() > 0 Тогда
		СуммаВходящийОстаток	= СтруктураДанных.Остатки.ОборотыПоСчету[0].СуммаВходящийОстаток;
		СуммаДоходы				= СтруктураДанных.Остатки.ОборотыПоСчету[0].СуммаДоход;
		СуммаИсходящийОстаток	= СтруктураДанных.Остатки.ОборотыПоСчету[0].СуммаИсходящийОстаток;
		СуммаРасходы			= СтруктураДанных.Остатки.ОборотыПоСчету[0].СуммаРасход;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьНаСервере()

#КонецОбласти


